= HTTP Client Facade for Java (hcf4j) image:https://img.shields.io/badge/email-%40metio-brightgreen.svg?style=social&label=mail["Discuss on Google Groups", link="https://groups.google.com/forum/#!forum/metio"] image:https://img.shields.io/badge/irc-%23metio.wtf-brightgreen.svg?style=social&label=IRC["Chat on IRC", link="http://webchat.freenode.net/?channels=metio.wtf"]
Sebastian Ho√ü <http://seb.xn--ho-hia.de/[@sebhoss]>
:github-org: sebhoss
:project-name: hcf4j

image:https://img.shields.io/badge/license-cc%20zero-000000.svg?style=flat-square["CC Zero", link="http://creativecommons.org/publicdomain/zero/1.0/"]
image:https://www.openhub.net/p/hcf4j/widgets/project_thin_badge.gif["Open Hub statistics", link="https://www.openhub.net/p/hcf4j"]

Provides an abstraction over the various HTTP client implementations in Java.

== Usage

----
// decide implementation by choosing a specific factory (here OkHttp3)
HttpClientFactory factory = new OkHttp3HttpClientFactory();

// fine tune w/ builder
HttpClient httpClient = factory
    .client()
    .userAgent("my-awesome/client 1.2.3")
    .build();

// blocking request
HttpResponse response = httpClient.get("http://example.com")
    .executeOnCallingThread();

// non-blocking requests
CompletionStage<HttpResponse> responsePromise = httpClient.get("http://example.com")
    .executeInBackground();

// inspect responses of blocking requests
String responseBody = response.body();
int statusCode = response.statusCode();

// handle non-blocking requests
responsePromise
    .thenAccept(response -> { /* your code here */ });

// fluent api
httpClient.get("http://example.com")
    .executeInBackground()
    .thenApply(HttpResponse::body)
    .thenAccept(System.out::println);

httpClient.post("http://example.com/api")
    .content("your-data")
    .mediaType("text/plain")
    .executeInBackground()
    .thenApply(HttpResponse::statusCode)
    .thenAccept(System.out::println)
----

== License

To the extent possible under law, the author(s) have dedicated all copyright
and related and neighboring rights to this software to the public domain
worldwide. This software is distributed without any warranty.

You should have received a copy of the CC0 Public Domain Dedication along
with this software. If not, see http://creativecommons.org/publicdomain/zero/1.0/.
